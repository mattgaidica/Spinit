
<div class="row-fluid">

  <div class="span12">
    <% if current_user %>
      <div><img src="<%= current_user.image %>"/></div>
      <div><%= current_user.name %></div>
      <div><%= link_to "Sign Out", signout_path %></div>
      <hr>
      <%= render :partial => "swipe", :locals => { :questions => @page.questions } %>
    <% else %>
      <div class="well">
        <a href="/auth/facebook">
          <img src="http://f.cl.ly/items/272O012s0U2G0L2Q2U0K/facebook_button.png"/>
        </a>
      </div>
    <% end %>
  </div><!--/span-->

</div>

<% if current_user %>
<script src='https://raw.github.com/bradbirdsall/Swipe/master/swipe.js'></script>
<script>
  var init_pos = '';
  var flip_thresh = false;
   
  function deviceOrientationHandler(LR, FB, DIR) {
    if(init_pos == '') {
      init_pos = DIR;
      return;
    }
    if(flip_thresh) {
      if(DIR > 270 || DIR < 90) {
        flip_thresh = false;
        submit_answer();
      }
    } else {
      if(DIR < 270 && DIR > 90) {
        flip_thresh = true;
      }
    }
  }

  var geo_stop_accuracy = 15; //integer in meters
  var geo_stop_milliseconds = 5000; //integer in milliseconds
  var geo_success_count = 1;
  var geo_wpid = false;
  var geo_stopped = false;

  $(function() {
    start_geolocation();
    setTimeout(function() {
      stop_geolocation();
    }, geo_stop_milliseconds);

    if (window.DeviceOrientationEvent) {
      window.addEventListener('deviceorientation', function(eventData) {
        var LR = eventData.gamma;
        var FB = eventData.beta;
        var DIR = eventData.alpha;
        deviceOrientationHandler(LR, FB, DIR);
      }, false);
    } else {
      alert("Not supported on your device or browser.  Sorry.");
      //add submit button
    }

    mySwipe = new Swipe(document.getElementById('slider'));
  });

  Pusher.channel_auth_endpoint = '/pusher/user';
  var channel = pusher.subscribe('presence-<%= @page.id %>');

  channel.bind('pusher:member_added', function(member) {
    alert('added' + member.id);
    //$('.user' + member.id).animate({opacity:1});
    //add_to_people(member);
  });

  channel.bind('pusher:member_removed', function(member) {
    alert('removed' + member.id);
    //$('.user' + member.id).animate({opacity:.5});
    //remove_marker(member);
    //remove_from_people(member);
  });

  channel.bind('greet', function(data) {
    alert(data);
  })

  /*
  function submit_answer() {
    $.post("/api/submit", { group_id : 1, question_id : 1, answer_index : mySwipe.index }, function(data) {
      if(data == true) {
        alert('Correct!');
      } else {
        alert('Sorry, that is wrong.');
      }
    });
  }
  */

  function update_spinit_position() {
    $.post("/positions/update", { latitude : geo_latitude, longitude : geo_longitude, page_id : <%= @page.id %> }, function(data) {
      
    });
  }

  function start_geolocation() {
    if(!!navigator.geolocation) {
      geo_wpid = navigator.geolocation.watchPosition(geo_success, geo_error, {enableHighAccuracy:true, maximumAge:0, timeout:27000});
    } else {
      alert('Geo is not supported.');
    }
  }

  function stop_geolocation() {
    if(geo_wpid !== false) {
      navigator.geolocation.clearWatch(geo_wpid);
      geo_wpid = false;
      update_spinit_position();
    }
  }

  function geo_success(position) {
    if(geo_success_count == 1 || position.coords.accuracy < geo_accuracy) {
      geo_accuracy = position.coords.accuracy;
      geo_latitude = position.coords.latitude;
      geo_longitude = position.coords.longitude;
    }
    if(geo_accuracy < geo_stop_accuracy) {
      stop_geolocation();
    } else {
      geo_success_count++;
    }
  }

  function geo_error(error){
    switch (error.code) {
      case error.TIMEOUT:
        alert('Timeout');
        break;
      case error.POSITION_UNAVAILABLE:
        alert('Position unavailable');
        break;
      case error.PERMISSION_DENIED:
        alert('Permission denied');
        break;
      case error.UNKNOWN_ERROR:
        alert('Unknown error');
        break;
    }
  }
</script>
<% end %>